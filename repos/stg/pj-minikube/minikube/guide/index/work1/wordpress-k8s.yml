# Tomcat Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment
  labels:
    app: tomcat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
        - name: tomcat
          image: tomcat:latest
          ports:
            - containerPort: 8080

# Tomcat Service
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-service
  labels:
    app: tomcat
spec:
  type: LoadBalancer
  # type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30081 # NodePort로 외부에 노출될 포트
  selector:
    app: tomcat

# Apache Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-deployment
  labels:
    app: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
        - name: apache
          image: httpd:latest
          ports:
            - containerPort: 80

# Apache Service
---
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  labels:
    app: apache
spec:
  type: LoadBalancer
  # type: NodePort
  ports:
    - port: 9002
      targetPort: 80
      nodePort: 30082 # NodePort로 외부에 노출될 포트
  selector:
    app: apache

# Nginx Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  labels:
    app: nginx
spec:
  type: LoadBalancer
  # type: NodePort
  # spec:
  #   type: NodePort
  ports:
    - port: 9001
      targetPort: 80
      nodePort: 30080 # NodePort로 외부에 노출될 포트
  selector:
    app: nginx
